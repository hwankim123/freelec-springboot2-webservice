language: java
jdk:
  - openjdk8

#gradlew에 permission 문제가 발생해서 Travis Build에 실패할 경우 해당 코드 추가
before_install:
  - chmod +x gradlew

#Travis CI를 어느 브랜치가 푸시될 때 수행할지
branches:
  only:
    - master

#Travis CI 서버의 Home
#그레이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 위에서 설정한 브랜치에 푸시되었을 때 실행될 명령어. gradlew를 이용해 clean & build를 실행
script: "./gradlew clean build"

# CodeDeploy는 Jar 파일을 인식하지 못하므로 Jar파일과 기타 파일들을 zip로 압축
before deploy:
  - mkdir -p before-deploy # TravisCI는 S3로 특정 파일만 업로드할 수 없다. 그렇기 떄문에 디렉토리 통쨰로 업로드 하기 위한 before-deploy 폴더 생성
  - cp scripts/*.sh before-deploy/ # before-deploy에는 zip 파일에 포함시킬 파일들을 저장
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # zip -r 명령을 통해 before-deploy 디렉토리 전체 파일을 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/freelec-springboot-webservice.zip # deploy로 zip파일 이동

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: hwankim123-freelec-springboot-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로 설정
    local_dir: deploy # before_deploy에서 생성한 디렉토리. 해당 위치의 파일들만 S3로 전송
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: hwankim123-freelec-springboot-build
    key: freelec-springboot2-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip # 압축 확장자
    application: freelec-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: freelec-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

#CI 완료 시 메일로 알람.
notifications:
  email:
    recipients:
      - hwankim1941@gmail.com
